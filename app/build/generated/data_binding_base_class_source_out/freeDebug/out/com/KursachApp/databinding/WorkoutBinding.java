// Generated by view binder compiler. Do not edit!
package com.KursachApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.KursachApp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WorkoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatTextView dateTv;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final ImageButton editButton;

  @NonNull
  public final AppCompatImageView iv;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final AppCompatTextView nameTv;

  @NonNull
  public final ImageButton workoutButton;

  private WorkoutBinding(@NonNull ConstraintLayout rootView, @NonNull AppCompatTextView dateTv,
      @NonNull ImageButton deleteButton, @NonNull ImageButton editButton,
      @NonNull AppCompatImageView iv, @NonNull ConstraintLayout linearLayout,
      @NonNull AppCompatTextView nameTv, @NonNull ImageButton workoutButton) {
    this.rootView = rootView;
    this.dateTv = dateTv;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
    this.iv = iv;
    this.linearLayout = linearLayout;
    this.nameTv = nameTv;
    this.workoutButton = workoutButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WorkoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WorkoutBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.workout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WorkoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_tv;
      AppCompatTextView dateTv = rootView.findViewById(id);
      if (dateTv == null) {
        break missingId;
      }

      id = R.id.delete_button;
      ImageButton deleteButton = rootView.findViewById(id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.edit_button;
      ImageButton editButton = rootView.findViewById(id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.iv;
      AppCompatImageView iv = rootView.findViewById(id);
      if (iv == null) {
        break missingId;
      }

      ConstraintLayout linearLayout = (ConstraintLayout) rootView;

      id = R.id.name_tv;
      AppCompatTextView nameTv = rootView.findViewById(id);
      if (nameTv == null) {
        break missingId;
      }

      id = R.id.workout_button;
      ImageButton workoutButton = rootView.findViewById(id);
      if (workoutButton == null) {
        break missingId;
      }

      return new WorkoutBinding((ConstraintLayout) rootView, dateTv, deleteButton, editButton, iv,
          linearLayout, nameTv, workoutButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
